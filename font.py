import os

import pygame

IMAGE = None

_chars = {
    " ":(0,0),
    "!":(5,0),
    "\"":(10,0),
    "#":(15,0),
    "$":(20,0),
    "%":(25,0),
    "&":(30,0),
    "'":(35,0),
    "(":(40,0),
    ")":(45,0),
    "*":(50,0),
    "+":(55,0),
    ",":(0,7),
    "-":(5,7),
    ".":(10,7),
    "/":(15,7),
    "0":(20,7),
    "1":(25,7),
    "2":(30,7),
    "3":(35,7),
    "4":(40,7),
    "5":(45,7),
    "6":(50,7),
    "7":(55,7),
    "8":(0,14),
    "9":(5,14),
    ":":(10,14),
    ";":(15,14),
    "<":(20,14),
    "=":(25,14),
    ">":(30,14),
    "?":(35,14),
    "@":(40,14),
    "A":(45,14),
    "B":(50,14),
    "C":(55,14),
    "D":(0,21),
    "E":(5,21),
    "F":(10,21),
    "G":(15,21),
    "H":(20,21),
    "I":(25,21),
    "J":(30,21),
    "K":(35,21),
    "L":(40,21),
    "M":(45,21),
    "N":(50,21),
    "O":(55,21),
    "P":(0,28),
    "Q":(5,28),
    "R":(10,28),
    "S":(15,28),
    "T":(20,28),
    "U":(25,28),
    "V":(30,28),
    "W":(35,28),
    "X":(40,28),
    "Y":(45,28),
    "Z":(50,28),
    "[":(55,28),
    "\\":(0,35),
    "]":(5,35),
    "^":(10,35),
    "`":(15,35),
    "_":(20,35),
    "a":(25,35),
    "b":(30,35),
    "c":(35,35),
    "d":(40,35),
    "e":(45,35),
    "f":(50,35),
    "g":(55,35),
    "h":(0,42),
    "i":(5,42),
    "j":(10,42),
    "k":(15,42),
    "l":(20,42),
    "m":(25,42),
    "n":(30,42),
    "o":(35,42),
    "p":(40,42),
    "q":(45,42),
    "r":(50,42),
    "s":(55,42),
    "t":(0,49),
    "u":(5,49),
    "v":(10,49),
    "w":(15,49),
    "x":(20,49),
    "y":(25,49),
    "z":(30,49),
    "{":(35,49),
    "|":(40,49),
    "}":(45,49),
    "~":(50,49)
}
def write(surface, text, x, y,
          centered=0):
    global IMAGE
    if IMAGE is None:
        IMAGE = pygame.image.load(os.path.join('resources', 'font.png'))

    text = text.split("\n")
    orig_x=x
    for line in text:
        if centered==1:
            x=orig_x-len(line)*3
        elif centered==2:
            x=orig_x-len(line)*6
        else:
            x = orig_x
        for i in range(len(line)):
            if line[i] not in _chars: continue
            surface.blit(IMAGE, (x,y), (*_chars[line[i]], 5, 7))
            x+=6
        y += 8
